@inject IPersonService PersonService
@implements IDisposable

@if (PersonService.People == null || PersonService.People.Count == 0)
{
    <span>Loading people...</span>
}
else
{
    <ul class="list-unstyled"> 
        @foreach (var person in PersonService.People)
        {
            <li class="media my-3">
                <div class="media-img-wrapper mr-2">
                    <a href="/person/@person.PersonId">
                        @if(person.Pictures.Count > 0)
                        {
                            <img class="media-img" src="@person.Pictures[0].Data" alt="@person.Nick" />
                        }
                        else
                        {
                            <img class="media-img" src="nopicture.jfif" />
                        }
                    </a>
                </div>
                <div class="media-body">
                    <a href="/person/@person.PersonId">
                        <h4 class="mb-0">@person.Nick</h4>
                    </a>
                    <h5>@person.Name</h5>
                    <p>@person.ProfileText</p>
                </div>
            </li>
        }
    </ul>
}

@code {
    protected override void OnInitialized()
    {
        //await PersonService.GetPeople();
        PersonService.PeopleChanged += StateHasChanged;
    }

    public  void Dispose()
    {
        PersonService.PeopleChanged -= StateHasChanged;
    }
}
